{"version":3,"sources":["logo.svg","components/RelicSearch.js","components/RelicCard.js","components/RelicSearcher.js","App.js","reportWebVitals.js","index.js"],"names":["retrieveRelicData","tier","name","a","fetch","getRelicURL","response","json","data","relicUrl","RelicSearch","setRelic","useState","setTier","setName","onSubmit","event","preventDefault","searchRelic","value","onChange","target","style","height","type","borderRadius","console","log","relic","RelicReward","props","reward","chance","rarity","itemName","RelicRewardList","rewardList","RelicCard","rewards","Intact","Exceptional","Flawless","Radiant","RelicSearcher","display","color","background","padding","App","className","placeItems","backgroundColor","src","logo","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ea57d7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react';\r\n\r\nconst relicUrl = \"https://drops.warframestat.us/data/relics\";\r\n//const booksUrl = \"https://www.anapioficeandfire.com/api/books\";\r\n\r\nexport const RelicSearch = ({setRelic}) => {\r\n    // Search terms\r\n    const [tier, setTier] = useState('Lith');\r\n    const [name, setName] = useState('R1');\r\n\r\n    return (\r\n    <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Tier: </label>\r\n            <select value={tier} onChange={(event) => setTier(event.target.value)}>\r\n                <option value=\"Lith\">Lith</option>\r\n                <option value=\"Meso\">Meso</option>\r\n                <option value=\"Neo\">Neo</option>\r\n                <option value=\"Axi\">Axi</option>\r\n            </select>\r\n            <label>     Name: </label>\r\n            <textarea style={{height:15}} value={name} onChange={(event) => setName(event.target.value)} />\r\n            <br/><br/>\r\n            <input type=\"submit\" value=\"Fetch data\" style={{ height:'40px', borderRadius:'5px' }}/>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n    //<button onClick={() => onClick('Lith','R1')}>Test Relic</button>\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        searchRelic(tier,name);\r\n    }\r\n\r\n    async function searchRelic(tier,name){\r\n        if(tier == null || name == null){\r\n            console.log('Invalid input: Tier: ' + tier + ', Name: ' + name);\r\n            return;\r\n        }\r\n        console.log('Fetching data...');\r\n        const relic = await retrieveRelicData(tier,name);\r\n        console.log('Relic fetched: ' + relic?.name);\r\n        setRelic(relic);\r\n      }\r\n  }\r\n\r\n  async function retrieveRelicData(tier,name) {\r\n    const response = await fetch(getRelicURL(tier,name));\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  \r\n  function getRelicURL(tier,name) {\r\n    return relicUrl + \"/\" + tier + \"/\" + name + \".json\";\r\n  }\r\n\r\n  export default RelicSearch;","function RelicCard({relic})\r\n{\r\n    return (\r\n        <div>\r\n            <div>Relic: {relic?.tier} {relic?.name}</div>\r\n            <br/>\r\n            INTACT\r\n            <RelicRewardList rewardList={relic?.rewards?.Intact} />\r\n            <br/>\r\n            EXCEPTIONAL\r\n            <RelicRewardList rewardList={relic?.rewards?.Exceptional} />\r\n            <br/>\r\n            FLAWLESS\r\n            <RelicRewardList rewardList={relic?.rewards?.Flawless} />\r\n            <br/>\r\n            RADIANT\r\n            <RelicRewardList rewardList={relic?.rewards?.Radiant} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RelicReward(props)\r\n{\r\n    let reward = props?.reward;\r\n    return (\r\n            <div>[{reward?.chance}%] {reward?.rarity}: {reward?.itemName}</div>\r\n    )\r\n}\r\n\r\nfunction RelicRewardList(props)\r\n{\r\n    let rewardList = props?.rewardList;\r\n    //console.log(\"rewardList: \" + JSON.stringify(rewardList));\r\n    if(rewardList == null)\r\n    {\r\n        return(<div></div>)\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <RelicReward reward={rewardList[0]} />\r\n            <RelicReward reward={rewardList[1]} />\r\n            <RelicReward reward={rewardList[2]} />\r\n            <RelicReward reward={rewardList[3]} />\r\n            <RelicReward reward={rewardList[4]} />\r\n            <RelicReward reward={rewardList[5]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RelicCard;","import React, { useState } from 'react';\r\nimport RelicSearch from './RelicSearch';\r\nimport RelicCard from './RelicCard';\r\n\r\nexport const RelicSearcher = () => {\r\n    const [relic, setRelic] = useState(null);\r\n\r\n    return (\r\n    <div style={{ display:'inline-block', color:'white', background: 'DimGrey', borderRadius:'25px', padding:'30px' }}>\r\n        <RelicSearch setRelic={setRelic}/>\r\n        <br/>\r\n        <RelicCard relic={relic}/>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  export default RelicSearcher;","import logo from './logo.svg';\nimport './App.css';\nimport RelicSearcher from './components/RelicSearcher';\n\nfunction App()\n{\n  return (\n    <div className=\"App\" style={{display:'grid', placeItems:'center', backgroundColor:'DarkSlateGrey'}}>\n        <img src={logo} alt=\"logo\" width=\"100\" height=\"100\" /><br/>\n        <RelicSearcher/>\n    </div>\n  );\n}\n\n/*\nfunction App()\n{\n  const [relic, setRelic] = useState(null);\n\n  useEffect(() => {\n    getDataFun().then(response => setRelic(response));\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <img src={logo} alt=\"logo\" width=\"100\" height=\"100\" /><br/>\n        API RESPONSE:<br/>\n        Relic[{relic?.toString()}]<br/>\n        Tier[{relic?.tier}]<br/>\n        Name[{relic?.name}] <br/>\n        ----<br/>\n        <RelicSearcher/>\n\n        <form onSubmit={changeRelicEvent}>\n          <label for=\"tiers\">Tier: </label>\n          <select name=\"tiers\" id=\"tiers\">\n            <option value=\"lith\">Lith</option>\n            <option value=\"meso\">Meso</option>\n            <option value=\"neo\">Neo</option>\n            <option value=\"axi\">Axi</option>\n          </select>\n          <label for=\"names\">Name: </label>\n          <select name=\"names\" id=\"names\">\n            <option value=\"r1\">R1</option>\n          </select>\n          <br/>\n          <input type=\"submit\" value=\"Retrieve\"/>\n        </form>\n        <br/>\n        <RelicComponent id='my-relic-com' relic={relic} />\n      <Clock extraDate={new Date()}/>\n    </div>\n  );\n\n  async function changeRelicEvent(e) {\n    e.preventDefault();\n    \n    const myRelicComponent = document.querySelector('#my-relic-com');\n    if(myRelicComponent != null)\n    {\n      getDataFun().then(response => myRelicComponent.setRelic(response));\n    }\n    else\n    {\n      console.log('ERROR: component not found');\n    }\n    console.log('You clicked submit.');\n  }\n\n}\n//<RelicDiv relic={relic} />\n\nasync function getDataFun() {\n  const response = await fetch(getRelicURL(\"Lith\",\"R1\"));\n  const data = await response.json();\n  return data;\n}\n\nasync function retrieveRelicData(tier,name) {\n  const response = await fetch(getRelicURL(tier,name));\n  const data = await response.json();\n  return data;\n}\n\nfunction getRelicURL(tier,name) {\n  return relicUrl + \"/\" + tier + \"/\" + name + \".json\";\n}\n*/\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}