{"version":3,"sources":["logo.svg","RelicDiv.js","Clock.js","App.js","reportWebVitals.js","index.js"],"names":["RelicReward","props","reward","chance","rarity","itemName","RelicRewardList","rewardList","console","log","JSON","stringify","RelicDiv","relic","tier","name","rewards","Intact","length","Exceptional","Flawless","Radiant","Clock","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","ReactDOM","render","document","getElementById","a","fetch","getRelicURL","response","json","data","relicUrl","App","useState","setRelic","useEffect","getDataFun","then","className","src","logo","alt","width","height","toString","action","for","id","value","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.ab627ceb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nfunction RelicDiv(props)\r\n{\r\n    let relic = props?.relic;\r\n    return (\r\n        <div>\r\n            <div>Relic: {relic?.tier} {relic?.name}</div>\r\n            <br/>\r\n            Amount of Intact rewards: {relic?.rewards?.Intact?.length}\r\n            <br/>\r\n            Amount of Exceptional rewards: {relic?.rewards?.Exceptional?.length}\r\n            <br/>\r\n            Amount of Flawless rewards: {relic?.rewards?.Flawless?.length}\r\n            <br/>\r\n            Amount of Radiant rewards: {relic?.rewards?.Radiant?.length}\r\n            <br/>\r\n            <br/>\r\n            INTACT\r\n            <RelicRewardList rewardList={relic?.rewards?.Intact} />\r\n            <br/>\r\n            EXCEPTIONAL\r\n            <RelicRewardList rewardList={relic?.rewards?.Exceptional} />\r\n            <br/>\r\n            FLAWLESS\r\n            <RelicRewardList rewardList={relic?.rewards?.Flawless} />\r\n            <br/>\r\n            RADIANT\r\n            <RelicRewardList rewardList={relic?.rewards?.Radiant} />\r\n            \r\n            <br/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n//<h1>ME RELIC: {JSON.stringify(relic, null, 4)}</h1>;\r\n//TEST2: <RelicRewards rewardsRarity={relic?.rewards?.Intact[0]}/>\r\n//<RelicReward2 reward={relic?.rewards?.Intact} />\r\n//<RelicRewardList rewardList={relic?.rewards?.Intact} />\r\n\r\nfunction RelicRewards(props)\r\n{\r\n    console.log(\"props: \" + JSON.stringify(props));\r\n    let rewardsRarity = props?.rewardsRarity;\r\n    let rewardComponents = [];\r\n    for(let i=0; i < 2; i++)\r\n    {\r\n        console.log(\"rewardsRarity: \" + JSON.stringify(rewardsRarity, null, 4));\r\n        rewardComponents[i] = RelicReward(rewardsRarity[i]);\r\n    }\r\n\r\n    return rewardComponents.map((MyComponent, index) => {\r\n        return (\r\n             <li key={index}>\r\n                 <MyComponent />\r\n             </li>\r\n        )\r\n   });\r\n}\r\n\r\nfunction RelicReward(props)\r\n{\r\n    let reward = props?.reward;\r\n    return (\r\n            <div>[{reward?.chance}%] {reward?.rarity}: {reward?.itemName}</div>\r\n    )\r\n}\r\n\r\nfunction RelicRewardList(props)\r\n{\r\n    let rewardList = props?.rewardList;\r\n    console.log(\"rewardList: \" + JSON.stringify(rewardList));\r\n    if(rewardList == null)\r\n    {\r\n        return(<div></div>)\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <RelicReward reward={rewardList[0]} />\r\n            <RelicReward reward={rewardList[1]} />\r\n            <RelicReward reward={rewardList[2]} />\r\n            <RelicReward reward={rewardList[3]} />\r\n            <RelicReward reward={rewardList[4]} />\r\n            <RelicReward reward={rewardList[5]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RelicReward2(props)\r\n{\r\n    console.log(\"props: \" + JSON.stringify(props));\r\n    let reward = props?.reward[0];\r\n    console.log(\"reward: \" + JSON.stringify(reward));\r\n    //console.log(\"reward 0: \" + JSON.stringify(reward[0]));\r\n    //console.log(\"reward size: \" + reward.length);\r\n    let rewardComponents = [];\r\n    \r\n    /*for(let i=0; i < 6; i++)\r\n    {\r\n        console.log(\"reward single: \" + JSON.stringify(reward[i]));\r\n        rewardComponents.push(RelicReward[i]);\r\n    }\r\n    return (\r\n        <div>{rewardComponents}</div>\r\n    )*/\r\n    return (\r\n            <div>[{reward?.chance}%] {reward?.rarity}: {reward?.itemName}</div>\r\n    )/*\r\n    return (\r\n        <RelicReward reward={reward} />\r\n    )*/\r\n}\r\n\r\nexport default RelicDiv;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport class Clock extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {date: new Date()};\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.timerID = setInterval(\r\n        () => this.tick(),\r\n        1000\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.timerID);\r\n    }\r\n  \r\n    tick() {\r\n      this.setState({\r\n        date: new Date()\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>Hello, world!</h1>\r\n          <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <Clock />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  \r\nexport default Clock","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport RelicDiv from './RelicDiv';\nimport Clock from './Clock';\n\nconst relicUrl = \"https://drops.warframestat.us/data/relics\";\nconst relicUrlAxiR1 = \"https://drops.warframestat.us/data/relics/Axi/R1.json\";\nconst booksUrl = \"https://www.anapioficeandfire.com/api/books\";\n\nfunction App()\n{\n  const [relic, setRelic] = useState(null);\n\n  useEffect(() => {\n    getDataFun().then(response => setRelic(response));\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <img src={logo} alt=\"logo\" width=\"100\" height=\"100\" /><br/>\n        API RESPONSE:<br/>\n        Relic[{relic?.toString()}]<br/>\n        Tier[{relic?.tier}]<br/>\n        Name[{relic?.name}] <br/>\n        ----<br/>\n        <form action=\"\">\n          <label for=\"tiers\">Tier: </label>\n          <select name=\"tiers\" id=\"tiers\">\n            <option value=\"lith\">Lith</option>\n            <option value=\"meso\">Meso</option>\n            <option value=\"neo\">Neo</option>\n            <option value=\"axi\">Axi</option>\n          </select>\n          <label for=\"names\">Name: </label>\n          <select name=\"names\" id=\"names\">\n            <option value=\"r1\">R1</option>\n          </select>\n          <br/>\n          <input type=\"submit\" value=\"Retrieve\"/>\n        </form>\n        <br/>\n      <RelicDiv relic={relic} />\n      <Clock />\n    </div>\n  );\n}\n\nasync function getDataFun() {\n  const response = await fetch(getRelicURL(\"Lith\",\"R1\"));\n  const data = await response.json();\n  return data;\n}\n\nasync function retrieveRelicData(tier,name) {\n  const response = await fetch(getRelicURL(tier,name));\n  const data = await response.json();\n  return data;\n}\n\nfunction getRelicURL(tier,name) {\n  return relicUrl + \"/\" + tier + \"/\" + name + \".json\";\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}